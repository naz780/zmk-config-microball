#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        lang1 {
            bindings = <&kp LC(J)>;
            key-positions = <18 19>;
        };

        reset_L {
            bindings = <&bootloader>;
            key-positions = <10 15>;
        };

        reset_R {
            bindings = <&bootloader>;
            key-positions = <16 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    mkp_exit_AML: mkp_exit_AML {
        compatible = "zmk,behavior-macro-one-param";
        #biding-cells = <1>;
        bindings =
            <&macro_press>,
            <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
            <&macro_pause_for_release>,
            <&macro_release>,
            <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
            <&macro_tap>,
            <&sl 4>;

        label = "MKP_EXIT_AML";
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp L     &kp U         &kp F        &kp MINUS                                          &kp K        &kp W  &kp R  &kp Y  &kp P
&kp E      &kp I     &kp A         &kp O        &kp COMMA        &mkp MB3           &none          &kp G        &kp T  &kp N  &kp S  &kp H
&kp Z      &kp X     &kp C         &kp V        &kp LSHFT        &none              &none          &kp RSHFT    &kp D  &kp M  &kp J  &kp B
&kp LSHFT  &kp LGUI  &kp LEFT_ALT  &lt 6 TILDE  &lt 1 BACKSPACE  &mt LCTRL TAB      &mt RCTRL RET  &lt 2 SPACE                       &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        MATH {
            bindings = <
&none       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp TILDE                      &kp CARET    &kp LT    &kp EQUAL  &kp GT     &kp PRCNT
&kp N0      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp DOT    &trans      &trans  &kp UNDER    &kp PLUS  &kp MINUS  &kp STAR   &kp FSLH
&kp DOLLAR  &kp N7        &kp N8        &kp N9        &trans     &trans      &trans  &trans       &kp EXCL  &kp QMARK  &kp COLON  &kp SEMI
&trans      &trans        &trans        &trans        &none      &trans      &trans  &lt 3 SPACE                                  &trans
            >;
        };

        NAVI {
            bindings = <
&kp AT    &kp LBKT  &kp DQT    &kp RBKT  &kp AMPS                        &kp ESC  &none         &kp UP        &none       &none
&kp HASH  &kp LPAR  &kp SQT    &kp RPAR  &kp PIPE    &trans      &trans  &none    &kp LEFT      &kp DOWN      &kp RIGHT   &kp LS(LG(S))
&kp BSLH  &kp LBRC  &kp GRAVE  &kp RBRC  &trans      &trans      &trans  &trans   &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &none
&trans    &trans    &trans     &trans    &lt 3 BSPC  &trans      &trans  &none                                            &trans
            >;
        };

        SYSTEM {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                      &kp ESC  &kp INS  &kp HOME  &kp PG_UP  &trans
&trans          &kp LCTRL   &kp LGUI      &kp LALT      &kp LSHFT     &trans      &trans  &none    &kp DEL  &kp END   &kp PG_DN  &trans
&kp F1          &kp F2      &kp F3        &kp F4        &kp F5        &kp F6      &kp F7  &kp F8   &kp F9   &kp F10   &kp F11    &kp F12
&trans          &trans      &trans        &trans        &none         &trans      &trans  &none                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB3  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp LC(LS(T))  &kp LC(PAGE_UP)  &kp LC(T)  &kp LC(PAGE_DOWN)  &kp LC(W)                      &trans  &trans  &trans  &trans  &trans
&trans         &kp LA(LEFT)     &trans     &kp LA(RIGHT)      &trans     &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans           &trans     &trans             &trans     &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans           &trans     &trans             &trans     &trans      &trans  &trans                          &trans
            >;
        };
    };
};
